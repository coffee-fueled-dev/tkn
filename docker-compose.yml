services:
  # Memgraph Database
  memgraph:
    image: memgraph/memgraph-mage
    container_name: tkn-memgraph
    ports:
      - "${MEMGRAPH_BOLT_PORT:-7687}:7687"
      - "${MEMGRAPH_LOG_PORT:-7444}:7444"
    environment:
      MEMGRAPH: "--memory-limit=1024"
    volumes:
      - memgraph_data:/var/lib/memgraph
    networks:
      - tkn-network
    restart: unless-stopped

  # Memgraph Lab (separate container)
  memgraph-lab:
    image: memgraph/lab
    container_name: tkn-lab
    ports:
      - "${MEMGRAPH_LAB_PORT:-3000}:3000"
    environment:
      QUICK_CONNECT_MG_HOST: memgraph
      QUICK_CONNECT_MG_PORT: 7687
    depends_on:
      - memgraph
    networks:
      - tkn-network
    restart: unless-stopped

  # TKN Server Application
  tkn-server:
    build:
      context: ./packages/server
      dockerfile: Dockerfile
    container_name: tkn-server
    ports:
      - "4000:4000"    # TKN Server HTTP port
      - "4001:4001"    # TKN Server socket port (data processing)
    environment:
      - NODE_ENV=production
      - TKN_PORT=4000
      - MEMGRAPH_URI=bolt://memgraph:7687
      - MEMGRAPH_DB_NAME=memgraph
      - METRICS_SERVER_HOST=tkn-metrics-server
      - METRICS_SERVER_PORT=5001
    depends_on:
      - memgraph
      - tkn-metrics-server
    networks:
      - tkn-network
    restart: unless-stopped
    volumes:
      - ./packages/server/src:/app/src:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # TKN Metrics Server
  tkn-metrics-server:
    build:
      context: ./packages/metrics-server
      dockerfile: Dockerfile
    container_name: tkn-metrics-server
    ports:
      - "5002:5000"    # Metrics HTTP port (Prometheus endpoint)
      - "5001:5001"    # Metrics socket port (performance data)
    environment:
      - NODE_ENV=production
      - METRICS_HTTP_PORT=5000
      - METRICS_SOCKET_PORT=5001
      - PROMETHEUS_PREFIX=tkn_
    networks:
      - tkn-network
    restart: unless-stopped
    volumes:
      - ./packages/metrics-server/src:/app/src:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus (Metrics Storage)
  prometheus:
    image: prom/prometheus:latest
    container_name: tkn-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - tkn-network
    restart: unless-stopped
    depends_on:
      - tkn-metrics-server

  # Grafana (Metrics Visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: tkn-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - tkn-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  memgraph_data:
  prometheus_data:
  grafana_data:

networks:
  tkn-network:
    driver: bridge 